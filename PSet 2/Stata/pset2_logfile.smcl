{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}//Client/C$/Users/yfkas/Documents/GitHub/ARE213_Fall2023/PSet 2/Stata/pset2_logfile.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}30 Oct 2023, 16:20:53
{txt}
{com}. 
. 
. // install programs
. // do "$do_loc/Code/01_programs.do"
. 
. // analyze
. do "$do_loc/Code/02_analysis_q1.do"
{txt}
{com}. /*
> Title:          02_analysis_q1.do
> Outline:        Question 1, PSet 2 
> 
> Q1a
>         1. Is the panel balanced (a.k.a. complete)? 
>         2. Visualize the timing of primary belt laws.
>         3. Are there any reversals of primary belt laws? 
>         4. Are there never-treated states? 
>         5. How does the timing of primary and secondary belt laws relate to each other?
> 
> Q1b Compare log fatilities per capita with fatality count
> Q1c Plot outcome in an informative way. Interpret.
> 
> */
. 
.                         
. 
. * ============================================================================= *
. * Question 1
. * ============================================================================= *
. 
. use "$dta_loc/pset2", clear
{txt}
{com}. isid state year
{txt}
{com}. 
. sort state year primary secondary
{txt}
{com}. 
. count if primary == 1 & secondary == 1 // no state applies both laws at once
  {res}0
{txt}
{com}. 
. 
. // Q1a.1 ----------------------
. preserve
{txt}
{com}.         byso state  : egen state_ct = count(year)
{txt}
{com}.         tab state_ct 

   {txt}state_ct {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
         23 {c |}{res}      1,104      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      1,104      100.00
{txt}
{com}. 
.         byso year  : egen year_ct = count(state)
{txt}
{com}.         tab year_ct 

    {txt}year_ct {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
         48 {c |}{res}      1,104      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      1,104      100.00
{txt}
{com}. 
.         gen bal_test = 0 // generate a variable without missing values
{txt}
{com}.         keep state year bal_test
{txt}
{com}.         reshape wide bal_test, i(state) j(year)
{txt}(note: j = 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003)

Data{col 36}long{col 43}->{col 48}wide
{hline 77}
Number of obs.                 {res}    1104   {txt}->{res}      48
{txt}Number of variables            {res}       3   {txt}->{res}      24
{txt}j variable (23 values)             {res}year   {txt}->   (dropped)
xij variables:
                               {res}bal_test   {txt}->   {res}bal_test1981 bal_test1982 ... bal_test2003
{txt}{hline 77}

{com}.         // If the i-j combination contains a missing value for primary, 
.         // then reshape returns a missing value
. 
.         foreach var of varlist bal_test* {c -(}
{txt}  2{com}.                 assert `var' != .
{txt}  3{com}.         {c )-}
{txt}
{com}. restore
{txt}
{com}. // ANS: balanced indeed
. 
. 
. // Q1a.2 ----------------------
. // twoway (line primary year if state == 1) ///
. //         (line primary year if state == 4)
. 
. // I can't run this on my computer for some reason :(
. *panelview primary, i(state) t(year) type(treat)
. 
. 
. // Q1a.3 ----------------------
. preserve 
{txt}
{com}. //      br state year primary
. //      keep state year primary
.         byso state (year) : gen prim_delta = primary[_n]-primary[_n-1]
{txt}(48 missing values generated)

{com}.         assert prim_delta >= 0 | prim_delta == . 
{txt}
{com}. restore
{txt}
{com}. // ANS: Change in primary law within states is never negative
. 
. 
. // Q1a.4 ----------------------
. byso state : egen prim_ever = max(primary)
{txt}
{com}. preserve 
{txt}
{com}.         collapse (max) prim_ever, by(state)
{txt}
{com}.         count if prim_ever == 0 
  {res}30
{txt}
{com}. restore
{txt}
{com}. // ANS: 30 states are never-treated
. 
. 
. // Q1a.5 ----------------------
. preserve
{txt}
{com}.         keep state year primary secondary
{txt}
{com}.         count if primary == 1 & secondary == 1 // no state applies both laws at once
  {res}0
{txt}
{com}.         foreach law in primary secondary {c -(}
{txt}  2{com}.                 gen year_`law' = year if `law' == 1
{txt}  3{com}.         {c )-}
{txt}(922 missing values generated)
(589 missing values generated)

{com}.         byso state secondary (year) : egen yr_sec_end = max(year_secondary)
{txt}(589 missing values generated)

{com}.         byso state primary (year) : egen yr_prim_start = min(year_primary)
{txt}(922 missing values generated)

{com}.         sort state year primary secondary
{txt}
{com}.         collapse (mean) yr_sec_end yr_prim_start , by(state)
{txt}
{com}.         assert yr_sec_end < yr_prim_start if !missing(yr_prim_start) & !missing(yr_sec_end)
{txt}
{com}.         assert yr_sec_end + 1 == yr_prim_start if !missing(yr_prim_start) & !missing(yr_sec_end)
{txt}
{com}. restore
{txt}
{com}. // ANS: Primary and secondary laws never overlapped. 
. // Primary laws were adopted (if at all) one year after secondary laws were phased out.
. 
. // correlate adopting prim and sec within state
. preserve
{txt}
{com}.         collapse (max) primary secondary , by(state)
{txt}
{com}.         corr primary secondary 
{txt}(obs=48)

             {c |}  primary second~y
{hline 13}{c +}{hline 18}
     primary {c |}{res}   1.0000
   {txt}secondary {c |}{res}  -0.4619   1.0000

{txt}
{com}.         tab primary secondary 

     {txt}(max) {c |}    (max) secondary
   primary {c |}         0          1 {c |}     Total
{hline 11}{c +}{hline 22}{c +}{hline 10}
         0 {c |}{res}         1         29 {txt}{c |}{res}        30 
{txt}         1 {c |}{res}         7         11 {txt}{c |}{res}        18 
{txt}{hline 11}{c +}{hline 22}{c +}{hline 10}
     Total {c |}{res}         8         40 {txt}{c |}{res}        48 
{txt}
{com}.         // not immediately useful
. restore
{txt}
{com}. 
. 
. // Q1b ----------------------
. gen fat_pc = fatalities/population
{txt}
{com}. gen ln_fat_pc = ln(fatalities/population)
{txt}
{com}. label var ln_fat_pc "Log fatalities per capita"
{txt}
{com}. // hist ln_fat_pc
. // ANS: taking the log of the fraction of fatalities per capita (the outcome) 
. // is a good idea because it normalizes its distribution.
. 
. 
. // Q1c ----------------------
. 
. /*
> // First try
> collapse (mean) fatalities ln_fat_pc fat_pc, by(prim_ever year)
> // States that adopt the law have lower log fatalities/cap every year
> twoway (scatter ln_fat_pc year if prim_ever == 0) ///
>            (scatter ln_fat_pc year if prim_ever == 1), ///
>                 legend(label(1 "Never treated") label(2 "Treated"))
> 
> // States that adopt the law have higher total fatalities every year
> twoway (scatter fatalities year if prim_ever == 0) ///
>            (scatter fatalities year if prim_ever == 1), ///
>                 legend(label(1 "Never treated") label(2 "Treated"))
> 
> // States that adopt the law have lower fatalities/cap every year
> twoway (scatter fat_pc year if prim_ever == 0) ///
>            (scatter fat_pc year if prim_ever == 1), ///
>                 legend(label(1 "Never treated") label(2 "Treated"))
> 
> // Can also do relative to event time
> gen year_primary = year if primary == 1
> byso state primary (year) : egen yr_prim_start = min(year_primary)
> byso state (yr_prim_start): replace yr_prim_start = yr_prim_start[1]
> gen yr_relative = year - yr_prim_start if yr_prim_start != .
> sort state year
> tab yr_relative
> // hard to choose cutoff
> */
. 
. 
. // Plot raw data as in his "favorite event plot" by Fadlon and Nielsen (2015)
. // plot a few states that do and do not adopt with vertical lines for E_i
. gen year_primary = year if primary == 1
{txt}(922 missing values generated)

{com}. byso state primary (year) : egen cohort = min(year_primary)
{txt}(922 missing values generated)

{com}. byso state (cohort): replace cohort = cohort[1]
{txt}(232 real changes made)

{com}. replace cohort = 999 if cohort == .
{txt}(690 real changes made)

{com}. 
. sort state year // clean up
{txt}
{com}. drop year_primary
{txt}
{com}. 
. label define cohort 999 "No shock" ///
>                          1984 "1984" ///
>                          1986 "1986" ///
>                          1987 "1987" ///
>                          1991 "1991" ///
>                          1993 "1993" ///
>                          1996 "1996" ///
>                          1998 "1998" ///
>                          2000 "2000" ///
>                          2002 "2002" ///
>                          2003 "2003"
{txt}
{com}. label values cohort cohort
{txt}
{com}. 
. preserve
{txt}
{com}.         collapse (mean) fatalities ln_fat_pc fat_pc, by(cohort year)
{txt}
{com}. 
.         // plot raw data by cohort with vertical E_i
.         twoway (line ln_fat_pc year if cohort == 999, lcolor(black) ) ///
>                    (line ln_fat_pc year if cohort == 1984, lcolor(ebblue) ) ///
>                    (line ln_fat_pc year if cohort == 1987, lcolor(gs10) ) ///
>                    (line ln_fat_pc year if cohort == 1993, lcolor(midgreen) ) ///
>                    (line ln_fat_pc year if cohort == 2002, lcolor(dkorange) ), ///
>                         legend(label(1 "No shock") ///
>                                    label(2 "1984") /// 
>                                    label(3 "1987") /// 
>                                    label(4 "1993") /// 
>                                    label(5 "2002")) ///
>                            xline(1984, lcolor(ebblue) lpatter(dash)) ///
>                            xline(1987, lcolor(gs10) lpatter(dash)) ///
>                            xline(1993, lcolor(midgreen) lpatter(dash)) ///
>                            xline(2000, lcolor(dkorange) lpatter(dash))
{err}{hline 2}Break{hline 2}
{txt}{search r(1), local:r(1);}

end of do-file
{err}{hline 2}Break{hline 2}
{txt}{search r(1), local:r(1);}

end of do-file

{err}{hline 2}Break{hline 2}
{txt}{search r(1), local:r(1);}

{com}. do "C:\Users\YFKASH~1\AppData\Local\Temp\51\STD1340_000000.tmp"
{txt}
{com}. * ============================================================================= *
. *                                                       ARE 213: Problem set 2
. *                       Group members: Rajdev Brar, Yazen Kashlan, Cassandra Turk 
. * ============================================================================= *
. 
. /*
> Master do file for PSet 2
> Course: AER 213
> Date created: 10/19/2023
> */
. 
. 
. * ============================================================================= *
. * Set initial configurations and globals
. * ============================================================================= *
. 
. 
. clear all
{res}{txt}
{com}. version 15
{txt}
{com}. clear matrix
{txt}
{com}. cap log close 
{smcl}
{com}{sf}{ul off}